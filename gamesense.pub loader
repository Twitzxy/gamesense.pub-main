-- Roblox Services
local TweenService = game:GetService("TweenService")

-- UI Colors (Gamesense style)
local COLORS = {
    Background = Color3.fromRGB(0, 0, 0),
    Text = Color3.fromRGB(0, 255, 0),
    Accent = Color3.fromRGB(0, 255, 0),
    Card = Color3.fromRGB(20, 20, 20),
    Error = Color3.fromRGB(255, 0, 0),
    Border = Color3.fromRGB(50, 50, 50)
}

-- Gradient Colors for Top Bar Animation (Rainbow)
local gradientColors = {
    Color3.fromRGB(255, 0, 0),
    Color3.fromRGB(255, 165, 0),
    Color3.fromRGB(255, 255, 0),
    Color3.fromRGB(0, 255, 0),
    Color3.fromRGB(0, 0, 255),
    Color3.fromRGB(75, 0, 130),
    Color3.fromRGB(238, 130, 238)
}

-- Create Main GUI
local MainGui = Instance.new("ScreenGui")
MainGui.Name = "GameSenseMain"
MainGui.Parent = game.CoreGui

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 500, 0, 400)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
mainFrame.BackgroundColor3 = COLORS.Background
mainFrame.BorderColor3 = COLORS.Border
mainFrame.BorderSizePixel = 1
mainFrame.ClipsDescendants = true
mainFrame.Parent = MainGui

-- Title Bar
local mainTitleBar = Instance.new("Frame")
mainTitleBar.Name = "TitleBar"
mainTitleBar.Size = UDim2.new(1, 0, 0, 30)
mainTitleBar.BackgroundColor3 = COLORS.Card
mainTitleBar.BorderSizePixel = 0
mainTitleBar.ZIndex = 2
mainTitleBar.Parent = mainFrame

-- Title Text
local mainTitle = Instance.new("TextLabel")
mainTitle.Text = "GAMESENSE.PUB // CHEAT MENU"
mainTitle.Font = Enum.Font.Code
mainTitle.TextSize = 14
mainTitle.TextColor3 = COLORS.Accent
mainTitle.BackgroundTransparency = 1
mainTitle.Size = UDim2.new(1, -40, 1, 0)
mainTitle.Position = UDim2.new(0.5, 0, 0, 0)
mainTitle.AnchorPoint = Vector2.new(0.5, 0)
mainTitle.TextXAlignment = Enum.TextXAlignment.Center
mainTitle.ZIndex = 3
mainTitle.Parent = mainTitleBar

-- Close Button
local mainCloseButton = Instance.new("TextButton")
mainCloseButton.Text = "X"
mainCloseButton.Size = UDim2.new(0, 30, 0, 30)
mainCloseButton.Position = UDim2.new(1, -30, 0, 0)
mainCloseButton.BackgroundColor3 = COLORS.Card
mainCloseButton.TextColor3 = COLORS.Text
mainCloseButton.Font = Enum.Font.Code
mainCloseButton.TextSize = 14
mainCloseButton.ZIndex = 3
mainCloseButton.Parent = mainTitleBar

mainCloseButton.MouseButton1Click:Connect(function()
    MainGui:Destroy()
end)

-- Dragging for main frame
local dragStartPos
local frameStartPos

mainTitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragStartPos = input.Position
        frameStartPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragStartPos = nil
            end
        end)
    end
end)

mainTitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragStartPos then
        local delta = input.Position - dragStartPos
        mainFrame.Position = UDim2.new(
            frameStartPos.X.Scale, 
            frameStartPos.X.Offset + delta.X,
            frameStartPos.Y.Scale,
            frameStartPos.Y.Offset + delta.Y
        )
    end
end)

-- RGB Top Bar with smooth gradient transition
local mainTopBar = Instance.new("Frame")
mainTopBar.Size = UDim2.new(1, 0, 0, 2)
mainTopBar.Position = UDim2.new(0, 0, 1, -2)
mainTopBar.BackgroundColor3 = gradientColors[1]
mainTopBar.BorderSizePixel = 0
mainTopBar.ZIndex = 3
mainTopBar.Parent = mainTitleBar

-- Coroutine for smooth continuous gradient cycling
coroutine.wrap(function()
    local colorCount = #gradientColors
    local t = 0
    local speed = 1 / 5 -- 5 seconds per full cycle

    while task.wait(0.03) and mainTopBar do
        t = t + speed * 0.03
        if t > 1 then t = 0 end

        local index1 = math.floor(t * colorCount) + 1
        local index2 = index1 % colorCount + 1
        local lerpT = (t * colorCount) % 1

        mainTopBar.BackgroundColor3 = gradientColors[index1]:Lerp(gradientColors[index2], lerpT)
    end
end)()

-- Sidebar for tabs
local sidebar = Instance.new("Frame")
sidebar.Name = "Sidebar"
sidebar.Size = UDim2.new(0, 100, 0, 368)
sidebar.Position = UDim2.new(0, 0, 0, 30)
sidebar.BackgroundColor3 = COLORS.Card
sidebar.BorderSizePixel = 0
sidebar.Parent = mainFrame

-- Separator line on sidebar edge
local separator = Instance.new("Frame")
separator.Size = UDim2.new(0, 1, 1, 0)
separator.Position = UDim2.new(0, 100, 0, 0)
separator.BackgroundColor3 = COLORS.Border
separator.BorderSizePixel = 0
separator.Parent = sidebar

-- Main content area
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(0, 399, 0, 368)
contentFrame.Position = UDim2.new(0, 101, 0, 30)
contentFrame.BackgroundColor3 = COLORS.Background
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-- Utility function: Fade frame in/out (Tween transparency)
local function FadeFrame(frame, fadeIn, duration)
    duration = duration or 0.25
    local goal = {}
    if fadeIn then
        goal.BackgroundTransparency = 0
        for _, v in pairs(frame:GetChildren()) do
            if v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("ImageLabel") or v:IsA("Frame") then
                goal[v] = {BackgroundTransparency = 0, TextTransparency = 0, ImageTransparency = 0}
            end
        end
    else
        goal.BackgroundTransparency = 1
        for _, v in pairs(frame:GetChildren()) do
            if v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("ImageLabel") or v:IsA("Frame") then
                goal[v] = {BackgroundTransparency = 1, TextTransparency = 1, ImageTransparency = 1}
            end
        end
    end

    local tween = TweenService:Create(frame, TweenInfo.new(duration), {BackgroundTransparency = fadeIn and 0 or 1})
    tween:Play()
    for child, props in pairs(goal) do
        TweenService:Create(child, TweenInfo.new(duration), props):Play()
    end
    tween.Completed:Wait()
end

-- Function to create tabs and their content containers
local tabs = {}
local currentTabName = nil

local function CreateTab(name, yPos)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = name .. "Tab"
    tabButton.Text = name
    tabButton.Size = UDim2.new(1, 0, 0, 30)
    tabButton.Position = UDim2.new(0, 0, 0, yPos)
    tabButton.BackgroundColor3 = COLORS.Card
    tabButton.TextColor3 = COLORS.Text
    tabButton.Font = Enum.Font.Code
    tabButton.TextSize = 14
    tabButton.Parent = sidebar

    -- Content Frame for this tab
    local tabContent = Instance.new("Frame")
    tabContent.Name = name .. "Content"
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.Visible = false
    tabContent.Parent = contentFrame

    tabs[name] = {
        Button = tabButton,
        Content = tabContent,
    }

    tabButton.MouseButton1Click:Connect(function()
        if currentTabName == name then return end -- Already selected

        -- Fade out current content
        if currentTabName and tabs[currentTabName] then
            local currentContent = tabs[currentTabName].Content
            coroutine.wrap(function()
                FadeFrame(currentContent, false)
                currentContent.Visible = false
            end)()
        end

        -- Show new content
        local newContent = tabContent
        newContent.Visible = true
        FadeFrame(newContent, true)

        currentTabName = name
    end)

    return tabButton, tabContent
end

-- Create all tabs
local mainTabButton, mainContent = CreateTab("MAIN", 0)
local aimbotTabButton, aimbotContent = CreateTab("AIMBOT", 30)
local visualsTabButton, visualsContent = CreateTab("VISUALS", 60)
local miscTabButton, miscContent = CreateTab("MISC", 90)

-- MAIN tab content: CS:GO image in center
local csgoImage = Instance.new("ImageLabel")
csgoImage.Size = UDim2.new(0, 200, 0, 200)
csgoImage.Position = UDim2.new(0.5, -100, 0.5, -100)
csgoImage.AnchorPoint = Vector2.new(0.5, 0.5)
csgoImage.BackgroundTransparency = 1
csgoImage.Image = "rbxassetid://112154610367019"
csgoImage.Parent = mainContent

-- Placeholder labels for other tabs
local function createPlaceholderLabel(parent, text)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 30)
    label.Position = UDim2.new(0, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = COLORS.Text
    label.Font = Enum.Font.Code
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.Parent = parent
    return label
end

createPlaceholderLabel(aimbotContent, "Aimbot features coming soon...")
createPlaceholderLabel(visualsContent, "Visual enhancements coming soon...")
createPlaceholderLabel(miscContent, "Miscellaneous settings coming soon...")

-- Automatically select MAIN tab on open
mainTabButton:MouseButton1Click()

local function createToggle(parent, text, posY, default)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -20, 0, 30)
    toggleFrame.Position = UDim2.new(0, 10, 0, posY)
    toggleFrame.BackgroundColor3 = COLORS.Card
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Text = text
    label.Font = Enum.Font.Code
    label.TextSize = 14
    label.TextColor3 = COLORS.Text
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 5, 0, 5)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 50, 0, 20)
    button.Position = UDim2.new(1, -60, 0, 5)
    button.Text = default and "ON" or "OFF"
    button.Font = Enum.Font.Code
    button.TextSize = 14
    button.TextColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    button.BackgroundColor3 = COLORS.Background
    button.BorderColor3 = COLORS.Border
    button.Parent = toggleFrame

    local state = default

    button.MouseButton1Click:Connect(function()
        state = not state
        button.Text = state and "ON" or "OFF"
        button.TextColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        print(text .. " toggled: " .. tostring(state))
    end)

    return toggleFrame, function() return state end
end

local function createSlider(parent, text, posY, min, max, default)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -20, 0, 50)
    sliderFrame.Position = UDim2.new(0, 10, 0, posY)
    sliderFrame.BackgroundColor3 = COLORS.Card
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Text = text .. ": " .. tostring(default)
    label.Font = Enum.Font.Code
    label.TextSize = 14
    label.TextColor3 = COLORS.Text
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 5, 0, 5)
    label.Size = UDim2.new(1, -10, 0, 20)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = sliderFrame

    local sliderBackground = Instance.new("Frame")
    sliderBackground.Size = UDim2.new(1, -10, 0, 10)
    sliderBackground.Position = UDim2.new(0, 5, 0, 30)
    sliderBackground.BackgroundColor3 = COLORS.Background
    sliderBackground.BorderColor3 = COLORS.Border
    sliderBackground.BorderSizePixel = 1
    sliderBackground.Parent = sliderFrame

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.BackgroundColor3 = COLORS.Accent
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBackground

    local dragging = false
    local value = default

    local function updateSlider(inputPos)
        local relativeX = math.clamp(inputPos.X - sliderBackground.AbsolutePosition.X, 0, sliderBackground.AbsoluteSize.X)
        local percent = relativeX / sliderBackground.AbsoluteSize.X
        value = min + percent * (max - min)
        sliderFill.Size = UDim2.new(percent, 0, 1, 0)
        label.Text = text .. ": " .. string.format("%.1f", value)
        print(text .. " set to: " .. string.format("%.1f", value))
    end

    sliderBackground.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input.Position)
        end
    end)

    sliderBackground.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    sliderBackground.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input.Position)
        end
    end)

    return sliderFrame, function() return value end
end

-- Clear previous placeholder text in AIMBOT tab
for _, child in pairs(aimbotContent:GetChildren()) do
    if child:IsA("TextLabel") then
        child:Destroy()
    end
end

-- Add actual cheat controls to AIMBOT tab
local aimbotToggle, getAimbotState = createToggle(aimbotContent, "Aimbot", 10, false)
local fovSlider, getFOV = createSlider(aimbotContent, "FOV", 50, 1, 180, 90)
local smoothSlider, getSmooth = createSlider(aimbotContent, "Smoothness", 110, 1, 20, 5)

-- Example: Print current values every 2 seconds (simulate cheat logic hook)
task.spawn(function()
    while aimbotContent.Parent do
        task.wait(2)
        if getAimbotState() then
            print("Aimbot enabled! FOV:", string.format("%.1f", getFOV()), "Smoothness:", string.format("%.1f", getSmooth()))
        else
            print("Aimbot disabled")
        end
    end
end)

